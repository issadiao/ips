<?php
/**
 * Created by PhpStorm.
 * User: issa.diao
 * Date: 3/5/2014
 * Time: 10:08 AM
 */

// form to add repair request to item
function ips_repairs_node_view_form($form, &$form_state, $node) {

  $form['node_id'] = array(
    '#type' => 'hidden',
    '#default_value' => $node->nid,
  );

  $form['title'] = array(
    '#type' => 'hidden',
    '#default_value' => $node->title,
  );

  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Mark For Repair'),
  );

  return $form;

}

function ips_repairs_node_view_form_submit($form, &$form_state) {

  $item = $form_state['values']['node_id'];
  $title = $form_state['values']['title'];

  // create repair node with values
  global $user;
  $user = user_load($user->uid);

  $node = new stdClass();
  $node->type = 'repair';
  node_object_prepare($node);
  $node->language = LANGUAGE_NONE;
  $node->title = "REPAIR - $title";
  $node->field_repair_item['und'][0]['target_id'] = $item;
  $node->field_parent_company['und'][0]['target_id'] = $user->field_parent_company['und'][0]['target_id'];
  $node->created = time();
  $node->changed = time();
  $node->uid = $user->uid;

  node_save($node);

  // update item node repair status to yes
  $updated_item = node_load($item);
  $updated_item->field_item_needs_repair['und'][0]['value'] = "yes";
  node_save($updated_item);

  $log_message = array(
    "nid" => $item,
    "uid" => $user->uid,
    "status" => "Needs Repair",
    "data" => $title . " needs repair. <a href='/node/" . $node->nid . "'>Repair ticket " . $node->nid . "</a> has been created.",
  );
  ips_item_history_db_insert($log_message);

  drupal_goto("node/" . $node->nid . "/edit");

}

// form to close a repair
function ips_repairs_completed_form($form, &$form_state, $node) {

  $form['node_id'] = array(
    '#type' => 'hidden',
    '#default_value' => $node->nid,
  );

  $form['title'] = array(
    '#type' => 'hidden',
    '#default_value' => $node->title,
  );

  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Repair Complete'),
  );

  return $form;

}

function ips_repairs_completed_form_submit($form, &$form_state) {

  $repair = $form_state['values']['node_id'];
  $title = $form_state['values']['title'];

  global $user;

  $node = node_load($repair);
  $item = $node->field_repair_item['und'][0]['target_id'];
  node_save($node);

  // update item node repair status to no
  $updated_item = node_load($item);
  $updated_item->field_item_needs_repair['und'][0]['value'] = "no";
  node_save($updated_item);

  $log_message = array(
    "nid" => $item,
    "uid" => $user->uid,
    "status" => "Was Repaired",
    "data" => $title . " was repaired. <a href='/node/" . $node->nid . "'>Repair ticket " . $node->nid . "</a> has been closed.",
  );
  ips_item_history_db_insert($log_message);

  $form_state['redirect'] = drupal_lookup_path("alias", "node/" . $updated_item->nid);

}